from gtts import gTTS
import speech_recognition as sr
import pygame
import os
import time
import random
import keyboard
import webbrowser
from datetime import datetime
import AppOpener
import threading
import queue
import psutil
import tempfile
import requests
from bs4 import BeautifulSoup
from urllib.parse import quote
import gig
from youtube_search import YoutubeSearch
import mouse

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PyGame –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
pygame.init()
WIDTH, HEIGHT = 1000, 700
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("–ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ö–µ—à–∞")

# –¶–≤–µ—Ç–∞
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
GRAY = (200, 200, 200)
LIGHT_BLUE = (173, 216, 230)
DARK_BLUE = (0, 0, 139)
YELLOW = (255, 255, 0)

# –®—Ä–∏—Ñ—Ç—ã
font_large = pygame.font.SysFont('Arial', 32)
font_medium = pygame.font.SysFont('Arial', 20)
font_small = pygame.font.SysFont('Arial', 16)
font_tiny = pygame.font.SysFont('Arial', 14)

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
class UIState:
    def __init__(self):
        self.is_listening = False
        self.is_wake_word_detected = False
        self.last_command = ""
        self.status = "–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
        self.status_color = GREEN
        self.messages = []
        self.commands_page = 0
        self.total_command_pages = 0
        self.animation_counter = 0

ui_state = UIState()

# –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
COMMAND_CATEGORIES = {
    "üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã": [
        "–ü—Ä–∏–≤–µ—Ç - –ü–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å",
        "–ö–∞–∫ –¥–µ–ª–∞ - –£–∑–Ω–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ",
        "–ú–æ–ª–æ–¥–µ—Ü - –ü–æ—Ö–≤–∞–ª–∏—Ç—å",
        "–ü–æ–∫–∞/–°—Ç–æ–ø/–í—ã—Ö–æ–¥ - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É"
    ],
    "üåê –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –ø–æ–∏—Å–∫": [
        "–ù–∞–π–¥–∏ [–∑–∞–ø—Ä–æ—Å] - –ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ",
        "–ù–∞–π–¥–∏ –≤ —é—Ç—É–±–∏ [–∑–∞–ø—Ä–æ—Å] - –ü–æ–∏—Å–∫ –Ω–∞ YouTube",
        "Youtube - –û—Ç–∫—Ä—ã—Ç—å YouTube",
        "–ò–≥—Ä—ã - –û—Ç–∫—Ä—ã—Ç—å –Ø–Ω–¥–µ–∫—Å –ò–≥—Ä—ã",
        "–ü–æ–≥–æ–¥–∞ - –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É",
        "–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ - –û—Ç–∫—Ä—ã—Ç—å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫"
    ],
    "üéÆ –ò–≥—Ä—ã": [
        "–ö–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞ - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É",
        "–í–∏—Å–µ–ª–∏—Ü–∞ - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É",
        "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É",
        "–®–∞—Ö–º–∞—Ç—ã - –ó–∞–ø—É—Å—Ç–∏—Ç—å —à–∞—Ö–º–∞—Ç—ã",
        "–ö–≤–µ—Å—Ç - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É",
        "–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É",
        "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É",
        "FireKill - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É"
    ],
    "üíª –°–∏—Å—Ç–µ–º–∞ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è": [
        "–û—Ç–∫—Ä–æ–π [–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ] - –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É",
        "–ó–∞–∫—Ä–æ–π [–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ] - –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É",
        "–û—Ç–∫—Ä–æ–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ - –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä",
        "–û—Ç–∫—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - –û—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã",
        "–°–≤–µ—Ä–Ω–∏ –æ–∫–Ω–æ - –°–≤–µ—Ä–Ω—É—Ç—å —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ",
        "–ó–∞–∫—Ä–æ–π –æ–∫–Ω–æ - –ó–∞–∫—Ä—ã—Ç—å —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ"
    ],
    "üéµ –ú–µ–¥–∏–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ": [
        "–ú—É–∑—ã–∫–∞ - –û—Ç–∫—Ä—ã—Ç—å –º—É–∑—ã–∫—É",
        "–ú—É–∑—ã–∫–∞ [–Ω–∞–∑–≤–∞–Ω–∏–µ] - –ù–∞–π—Ç–∏ –º—É–∑—ã–∫—É",
        "–ü–∞—É–∑–∞ - –ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É",
        "–î–∞–ª—å—à–µ - –°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫",
        "–ü—Ä–æ–±–µ–ª - –ù–∞–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª",
        "–ì—Ä–æ–º—á–µ - –£–≤–µ–ª–∏—á–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å",
        "–¢–∏—à–µ - –£–º–µ–Ω—å—à–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å",
        "–ì—Ä–æ–º–∫–æ—Å—Ç—å [1-100] - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å"
    ],
    "‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è": [
        "–í—Ä–µ–º—è - –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è",
        "–°–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞—Ç–∞—Ä–µ–∏ - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞—Ç–∞—Ä–µ–µ",
        "–í—ã–∫–ª—é—á–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä - –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö"
    ],
    "üîß –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã": [
        "–ü–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π [—Ç–µ–∫—Å—Ç] - –ü–µ—Ä–µ–≤–æ–¥",
        "–ü–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π [—Ç–µ–∫—Å—Ç] - –ü–µ—Ä–µ–≤–æ–¥",
        "–í–∫–ª—é—á–∏ —Å–≤–µ—Ç - –£–º–Ω—ã–π –¥–æ–º",
        "–í—ã–∫–ª—é—á–∏ —Å–≤–µ—Ç - –£–º–Ω—ã–π –¥–æ–º",
        "–ü–æ—Å—Ç–∞–≤—å —Ç–∞–π–º–µ—Ä –Ω–∞ [–º–∏–Ω—É—Ç—ã] - –¢–∞–π–º–µ—Ä",
        "–¢–µ–ª–µ—Ñ–æ–Ω - –°–æ–≤–µ—Ä—à–∏—Ç—å –∑–≤–æ–Ω–æ–∫"
    ]
}

# –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –∫–æ–º–∞–Ω–¥
all_commands = []
for category, commands in COMMAND_CATEGORIES.items():
    all_commands.append(category)
    all_commands.extend(commands)

ui_state.total_command_pages = (len(all_commands) + 7) // 8  # 8 –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É

def get_text_with_url(url, class_name):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–ª–∞—Å—Å–æ–º –Ω–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
    try:
        encoded_url = quote(url, safe=':/?&=')
        
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
    
        response = requests.get(encoded_url, headers=headers, timeout=10)
        response.raise_for_status()

        soup = BeautifulSoup(response.content, 'html.parser')
        element = soup.find(class_=class_name)

        if element:
            return element.text.strip()
        else:
            return f"–≠–ª–µ–º–µ–Ω—Ç —Å –∫–ª–∞—Å—Å–æ–º '{class_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω"

    except requests.exceptions.RequestException as e:
        return f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}"
    except Exception as e:
        return f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

def start(name):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –∏–ª–∏ –ø–∞–ø–∫—É –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ"""
    path = __file__.replace('Kesha.py', name)
    os.startfile(path)

def search_and_open_youtube(query):
    """–ò—â–µ—Ç –≤–∏–¥–µ–æ –Ω–∞ YouTube –ø–æ –∑–∞–ø—Ä–æ—Å—É –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–µ—Ä–≤–æ–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
    results = YoutubeSearch(query, max_results=1).to_dict()
    
    if not results:
        print("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    
    video_url = f"https://youtube.com{results[0]['url_suffix']}"
    webbrowser.open(video_url)
    print(f"–û—Ç–∫—Ä—ã–≤–∞—é –≤–∏–¥–µ–æ: {results[0]['title']}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ —Å–∏—Å—Ç–µ–º—ã
pygame.mixer.init()
TEMP_DIR = tempfile.gettempdir()
command_queue = queue.Queue()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞
class Config:
    WAKE_WORDS = ['–∫–µ—à–∞', '–∫–µ—à', '–≥–æ—à–∞', '–∫—ç—à','–≤–∞–ª–µ—Ä–∞','—á–µ–±—É—Ä–µ–∫']
    SENSITIVITY = 0.5
    ENERGY_THRESHOLD = 1000
    PAUSE_THRESHOLD = 2
    DYNAMIC_ENERGY = True
    TIMEOUT = 1.5
    PHRASE_LIMIT = 3

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç—å—é
try:
    from ctypes import cast, POINTER
    from comtypes import CLSCTX_ALL
    from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
    devices = AudioUtilities.GetSpeakers()
    interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
    volume_control = cast(interface, POINTER(IAudioEndpointVolume))
    VOLUME_CONTROL_ENABLED = True
except:
    VOLUME_CONTROL_ENABLED = False
    print("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å—é")

class AudioManager:
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∞—É–¥–∏–æ"""
    def __init__(self):
        self._init_mixer()
        self.playback_thread = None
        self.is_speaking = False

    def _init_mixer(self):
        try:
            pygame.mixer.init(frequency=22050, size=-16, channels=2, buffer=512)
        except:
            print("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞—É–¥–∏–æ –º–∏–∫—à–µ—Ä–∞")

    def say(self, text):
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞"""
        if not text.strip():
            return

        try:
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            ui_state.messages.append(("–ö–µ—à–∞", text))
            if len(ui_state.messages) > 10:
                ui_state.messages.pop(0)
                
            filename = os.path.join(TEMP_DIR, f"voice_{int(time.time()*1000)}.mp3")
            tts = gTTS(text=text, lang='ru', slow=False)
            tts.save(filename)

            if self.playback_thread and self.playback_thread.is_alive():
                pygame.mixer.music.stop()
                self.playback_thread.join(timeout=0.1)

            self.is_speaking = True
            try:
                pygame.mixer.music.load(filename)
                pygame.mixer.music.play()
            except:
                self._init_mixer()
                pygame.mixer.music.load(filename)
                pygame.mixer.music.play()

            self.playback_thread = threading.Thread(
                target=self._cleanup_audio,
                args=(filename,),
                daemon=True
            )
            self.playback_thread.start()

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {e}")

    def _cleanup_audio(self, filename):
        """–û—á–∏—Å—Ç–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è"""
        while pygame.mixer.music.get_busy():
            time.sleep(0.05)
        try:
            if os.path.exists(filename):
                os.remove(filename)
        except:
            pass
        self.is_speaking = False

audio_manager = AudioManager()

class VoiceRecognizer:
    """–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥"""
    def __init__(self):
        self.recognizer = sr.Recognizer()
        self.recognizer.energy_threshold = Config.ENERGY_THRESHOLD
        self.recognizer.pause_threshold = Config.PAUSE_THRESHOLD
        self.recognizer.dynamic_energy_threshold = Config.DYNAMIC_ENERGY

    def listen(self, timeout=1.5):
        """–°–ª—É—à–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω —Å —Ç–∞–π–º–∞—É—Ç–æ–º"""
        with sr.Microphone() as source:
            try:
                ui_state.is_listening = True
                ui_state.status = "–°–ª—É—à–∞—é..."
                ui_state.status_color = BLUE
                
                # –ñ–¥–µ–º, –ø–æ–∫–∞ –ö–µ—à–∞ –∑–∞–∫–æ–Ω—á–∏—Ç –≥–æ–≤–æ—Ä–∏—Ç—å
                while audio_manager.is_speaking:
                    time.sleep(0.1)
                
                audio = self.recognizer.listen(
                    source, 
                    timeout=timeout,
                    phrase_time_limit=Config.PHRASE_LIMIT
                )
                text = self.recognizer.recognize_google(audio, language='ru-RU').lower()
                
                ui_state.messages.append(("–í—ã", text))
                if len(ui_state.messages) > 10:
                    ui_state.messages.pop(0)
                    
                ui_state.is_listening = False
                ui_state.status = "–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
                ui_state.status_color = GREEN
                
                return text
            except (sr.WaitTimeoutError, sr.UnknownValueError):
                ui_state.is_listening = False
                ui_state.status = "–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
                ui_state.status_color = GREEN
                return ""
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}")
                ui_state.is_listening = False
                ui_state.status = "–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è"
                ui_state.status_color = RED
                return ""

def re(text):
    """–ë—ã—Å—Ç—Ä—ã–π –≤—ã–≤–æ–¥ –∏ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞"""
    print(text)
    audio_manager.say(text)

def listen_for_wake_word():
    """–ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏"""
    recognizer = VoiceRecognizer()
    re("–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ, –∂–¥—É –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ...")
    print("–∫–µ—à–∞, –∫–µ—à, –≥–æ—à–∞, –∫—ç—à, –≤–∞–ª–µ—Ä–∞, —á–µ–±—É—Ä–µ–∫")
    
    while True:
        try:
            # –ñ–¥–µ–º, –ø–æ–∫–∞ –ö–µ—à–∞ –∑–∞–∫–æ–Ω—á–∏—Ç –≥–æ–≤–æ—Ä–∏—Ç—å
            while audio_manager.is_speaking:
                time.sleep(0.1)
                
            text = recognizer.listen(timeout=Config.TIMEOUT)
            if any(word in text for word in Config.WAKE_WORDS):
                ui_state.is_wake_word_detected = True
                ui_state.status = "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –ì–æ–≤–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É..."
                ui_state.status_color = GREEN
                command_queue.put("wake_word_detected")
                time.sleep(2)
                ui_state.is_wake_word_detected = False
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ listen_for_wake_word: {e}")
            time.sleep(0.1)

def recognize_command():
    """–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏"""
    recognizer = VoiceRecognizer()
    re("–°–ª—É—à–∞—é...")
    return recognizer.listen()

def process_commands():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –∏–∑ –æ—á–µ—Ä–µ–¥–∏"""
    while True:
        command = command_queue.get()
        if command == "wake_word_detected":
            command_text = recognize_command()
            if command_text:
                ui_state.last_command = command_text
                threading.Thread(
                    target=handle_command,
                    args=(command_text,),
                    daemon=True
                ).start()
            else:
                re("–Ø –≤–∞—Å –Ω–µ —Ä–∞—Å—Å–ª—ã—à–∞–ª, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞")

def set_system_volume(level):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã"""
    if not VOLUME_CONTROL_ENABLED:
        return False
    try:
        volume_control.SetMasterVolumeLevelScalar(level, None)
        return True
    except:
        return False

def get_system_volume():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –≥—Ä–æ–º–∫–æ—Å—Ç–∏"""
    if not VOLUME_CONTROL_ENABLED:
        return 0.5
    try:
        return volume_control.GetMasterVolumeLevelScalar()
    except:
        return 0.5

def change_volume(direction):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏"""
    current = get_system_volume()
    if direction == 'up':
        new_vol = min(1.0, current + 0.1)
    elif direction == 'down':
        new_vol = max(0.0, current - 0.1)
    else:
        return current

    if set_system_volume(new_vol):
        return new_vol
    return current

def handle_command(text):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã"""
    if not text:
        return

    print(f"–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {text}")
    text = text.lower().strip()
    try:
        if any(word in text for word in ['–ø–æ–∫–∞', '–≤—ã—Ö–æ–¥', '—Å—Ç–æ–ø']):
            re('–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!')
            time.sleep(2)
            os._exit(0)

        elif '–Ω–∞–π–¥–∏ –≤ —é—Ç—É–±–∏' in text:
            quertty = text.replace("–Ω–∞–π–¥–∏ –≤ —é—Ç—É–±–∏", "").strip()
            if quertty:
                search_and_open_youtube(quertty)
                re('–í–æ—Ç —á—Ç–æ —è –Ω–∞—à—ë–ª')
            else:
                re('–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞–º –Ω–∞–π—Ç–∏?')

        elif '–æ—Ç–∫—Ä–æ–π roblox' in text:
            os.startfile(r'C:\Users\Yusuf\AppData\Local\Roblox\Versions\version-fe20d41d8fec4770\RobloxPlayerBeta')
            re('–û—Ç–∫—Ä—ã–≤–∞—é')

        elif '–æ—Ç–∫—Ä–æ–π minecraft' in text:
            os.startfile(r'C:\Users\Yusuf\OneDrive\–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª\MINECRAFT')
            re('–û—Ç–∫—Ä—ã–≤–∞—é')
            
        elif '–ø–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞' in text:
                if '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π' in text:
                    m = text.replace("–ø–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π", "").strip()
                    while True:
                        try:
                            webbrowser.open(f'https://translate.yandex.ru/?from=tableau_yabro&source_lang=ru&target_lang=en&text={m}')
                            time.sleep(2)
                            for i in range(13):
                                time.sleep(0.0000001)
                                keyboard.send('Tab')
                            re(f'{m} –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º')
                            time.sleep(2)
                            keyboard.send('alt+ctrl+V')
                            break
                        except:
                            keyboard.send('alt+Shift')
                            keyboard.send('alt+ctrl+V')
                            break

                elif '—Ä—É—Å—Å–∫–∏–π' in text:
                    m = text.replace("–ø–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π", "").strip()
                    while True:
                        try:
                            webbrowser.open(f'https://translate.yandex.ru/?from=tableau_yabro&source_lang=en&target_lang=ru&text={m}')
                            time.sleep(2)
                            for i in range(13):
                                time.sleep(0.0000001)
                                keyboard.send('Tab')
                            re(f'{m} –Ω–∞ —Ä—É—Å—Å–∫–æ–º')
                            time.sleep(2)
                            keyboard.send('alt+ctrl+V')
                            break
                        except:
                            keyboard.send('alt+Shift')
                            keyboard.send('alt+ctrl+V')
                            break

        elif 'youtube' in text:
            webbrowser.open('https://www.youtube.com/')
            re('–û—Ç–∫—Ä—ã–≤–∞—é YouTube')
        
        elif '–∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞' in text:
            re('–ó–∞–ø—É—Å–∫–∞—é –∏–≥—Ä—É –∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞\n')
            start('stone_knots_paper.py')

        elif '–≤–∏—Å–µ–ª–∏—Ü' in text:
            re('–ó–∞–ø—É—Å–∫–∞—é –∏–≥—Ä—É –≤–∏—Å–µ–ª–∏—Ü–∞\n')
            start('hangman.py')

        elif '–≤–∏–∫—Ç–æ—Ä–∏–Ω' in text:
            re('–ó–∞–ø—É—Å–∫–∞—é –∏–≥—Ä—É –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞\n')
            start('quiz.py')

        elif '–≤–Ω–∏–∑' in text:
            mouse.wheel(-1)

        elif '–≤–µ—Ä—Ö' in text:
            mouse.wheel(1)

        elif '–∫–≤–µ—Å—Ç' in text:
            re('–ó–∞–ø—É—Å–∫–∞—é –∏–≥—Ä—É –∫–≤–µ—Å—Ç\n')
            start('quest.py')

        elif '–∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏' in text:
            re('–ó–∞–ø—É—Å–∫–∞—é –∏–≥—Ä—É –∫—Ä–µ—Å—Ç–∏–∫–∏ –Ω–æ–ª–∏–∫–∏\n')
            start('tictactoe.py')

        elif '—É–≥–∞–¥–∞–π —á–∏—Å–ª–æ' in text:
            re('–ó–∞–ø—É—Å–∫–∞—é –∏–≥—Ä—É —É–≥–∞–¥–∞–π —á–∏—Å–ª–æ\n')
            start('rand_game.py')

        elif any(word in text for word in ['–¥–∏–ø—Å–∏', 'deep', 'deepseek']):
            re('–û—Ç–∫—Ä—ã–≤–∞—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å –¥–∏–ø—Å–∏–∫')
            webbrowser.open('https://chat.deepseek.com/a/chat/s/5e62a9fe-9717-452d-9a82-89c2ca2dd30b')

        elif '–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫' in text:
            re('–û—Ç–∫—Ä—ã–≤–∞—é –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫')
            webbrowser.open('https://translate.yandex.ru/?111=')

        elif '–∏–≥—Ä—ã' in text:
            re('–û—Ç–∫—Ä—ã–≤–∞—é —è–Ω–¥–µ–∫—Å –∏–≥—Ä—ã')
            webbrowser.open('https://yandex.ru/games/')

        elif '–∫–∞–∫ –¥–µ–ª–∞' in text:
           re('–í—Å—ë –æ—Ç–ª–∏—á–Ω–æ!–ë—É–¥–µ—Ç –µ—â—ë –ª—É—á—à–µ –µ—Å–ª–∏ —è —Å–º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å')

        elif '–º–æ–ª–æ–¥–µ—Ü' in text:
            re('–°–ø–∞—Å–∏–±–æ!–í—Å–µ–≥–¥–∞ –∫ –≤–∞—à–∏–º —É—Å–ª—É–≥–∞–º')

        elif '–ø—Ä–∏–≤–µ—Ç' in text:
            re('–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?')

        elif '–Ω–∞–π–¥–∏' in text:
            querty = text.replace("–Ω–∞–π–¥–∏", "").strip()
            if querty:
                webbrowser.open_new_tab(f'https://yandex.ru/search/?text={querty}')
                re(f'–ò—â—É {querty}')
            else:
                re('–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞–º –Ω–∞–π—Ç–∏?')

        elif '–ø–æ–≥–æ–¥' in text:
            a = get_text_with_url('https://rp5.ru/–ü–æ–≥–æ–¥–∞_–≤_–°–æ—Å–µ–Ω–∫–∞—Ö,_–ú–æ—Å–∫–≤–∞','t_0')
            re(a)
            
        elif 'fire kill' in text:
            start(r'game\FireKill.py')
            re('–ó–∞–ø—É—Å–∫–∞—é')
            
        elif '—Ç–µ–ª–µ—Ñ–æ–Ω' in text:
            keyboard.send('Win + 3')
            time.sleep(1)
            mouse.move(299, 180)
            time.sleep(0.1)
            mouse.click('left')
            time.sleep(0.1)
            mouse.move(350, 129)
            time.sleep(0.1)
            mouse.click('left')
            re('–£–∂–µ –∑–≤–æ–Ω—é –∏—â–∏—Ç–µ')    
            
        elif 'fuck you' in text:
            start(r'game\FireKill.py')
            re('–ó–∞–ø—É—Å–∫–∞—é')
            
        elif '–æ—Ç–∫—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' in text:
            keyboard.send('Win + I')
            re('–ï—Å—Ç—å')

        # –î–ª—è —Ç–µ—Ö —É –∫–æ–≥–æ —É–º–Ω—ã–π –¥–æ–º

        elif '–≤–∫–ª—é—á–∏ —Å–≤–µ—Ç' in text:
            webbrowser.open('https://alice.yandex.ru?')
            time.sleep(2)
            keyboard.write('–í–∫–ª—é—á–∏ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫')
            keyboard.send('Enter')
            re('–û–∫')
        
        elif '–≤—ã–∫–ª—é—á–∏ —Å–≤–µ—Ç' in text:
            webbrowser.open('https://alice.yandex.ru?')
            time.sleep(2)
            keyboard.write('–í—ã–∫–ª—é—á–∏ —Å–≤–µ—Ç')
            keyboard.send('Enter')
            re('–û–∫')

        elif '–ø–æ—Å—Ç–∞–≤—å —Ç–∞–π–º–µ—Ä –Ω–∞' in text:
            w = text.replace("–ø–æ—Å—Ç–∞–≤—å —Ç–∞–π–º–µ—Ä –Ω–∞", "").strip()
            w = w.replace("–º–∏–Ω—É—Ç—É", "").strip()
            w = w.replace("–º–∏–Ω—É—Ç", "").strip()
            w = w.replace("—ã", "").strip()
            if w:
                start('timer.py')
                time.sleep(3)
                keyboard.write(w)
                keyboard.send('Enter') 
                re('–¢–∞–π–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω') 
            else:
                re('–£—Ç–æ—á–Ω–∏—Ç–µ –Ω–∞ —Å–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä')

        elif '–º—É–∑—ã–∫–∞' in text:
            q = text.replace("–º—É–∑—ã–∫–∞", "").strip()
            if q:
                AppOpener.open('Yandex',True)
                webbrowser.open(f'https://rus.hitmotop.com/search?q={q}')
                time.sleep(1)
                keyboard.send('Tab')
                keyboard.send('space')
                re('–ü–æ—Å–ª—É—à–∞–π—Ç–µ, —á—Ç–æ —è –Ω–∞—à—ë–ª')
                time.sleep(2)
                mouse.move(252, 794)
                mouse.click('left')
            else:
                AppOpener.open('Yandex',True)
                webbrowser.open('https://rus.hitmotop.com')
                re('–û—Ç–∫—Ä—ã–≤–∞—é')

        elif '–æ—Ç–∫—Ä–æ–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫' in text:
            keyboard.send('Win + E')
            re('–ï—Å—Ç—å')

        elif '–¥–∞–ª—å—à–µ' in text:
            keyboard.send('shift + N')
            re('–ï—Å—Ç—å')

        elif '–ø—Ä–æ–±–µ–ª' in text:
            keyboard.send('space')
            re('–ï—Å—Ç—å')

        elif '–ø–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω' in text:
            keyboard.send('F')
            re('–ï—Å—Ç—å')

        elif '–≤—Ä–µ–º—è' in text:
            current_time = datetime.now().strftime("%H:%M")
            re(f'–°–µ–π—á–∞—Å {current_time}')

        elif '–≤—Ä–µ–º–µ–Ω–∏' in text:
            current_time = datetime.now().strftime("%H:%M")
            re(f'–°–µ–π—á–∞—Å {current_time}')    

        elif '—Å–æ—Å—Ç–æ—è–Ω–∏–µ' in text or '–±–∞—Ç–∞—Ä–µ—è' in text:
            battery = psutil.sensors_battery()
            if battery.power_plugged:
                status = "–∑–∞—Ä—è–∂–∞–µ—Ç—Å—è"
            else:
                status = "—Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç –±–∞—Ç–∞—Ä–µ–∏"
            re(f'–ë–∞—Ç–∞—Ä–µ—è {status}, —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä—è–¥–∞ {battery.percent}%')

        elif any(word in text for word in ['–≥—Ä–æ–º—á–µ', '—É–≤–µ–ª–∏—á—å –≥—Ä–æ–º–∫–æ—Å—Ç—å']):
            new_vol = change_volume('up')
            re(f'–ì—Ä–æ–º–∫–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∞ –¥–æ {int(new_vol * 100)}%')

        elif any(word in text for word in ['—Ç–∏—à–µ', '—É–º–µ–Ω—å—à–∏ –≥—Ä–æ–º–∫–æ—Å—Ç—å']):
            new_vol = change_volume('down')
            re(f'–ì—Ä–æ–º–∫–æ—Å—Ç—å —É–º–µ–Ω—å—à–µ–Ω–∞ –¥–æ {int(new_vol * 100)}%')

        elif '–≥—Ä–æ–º–∫–æ—Å—Ç—å' in text:
            try:
                vol_level = int(''.join(filter(str.isdigit, text)))
                vol_level = max(0, min(100, vol_level))
                if set_system_volume(vol_level / 100):
                    re(f'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≥—Ä–æ–º–∫–æ—Å—Ç—å {vol_level}%')
            except:
                re('–°–∫–∞–∂–∏—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, "–ø–æ—Å—Ç–∞–≤—å –≥—Ä–æ–º–∫–æ—Å—Ç—å 50"')

        elif '–æ—Ç–∫—Ä–æ–π' in text:
            app = text.replace("–æ—Ç–∫—Ä–æ–π", "").strip()
            if app:
                try:
                    AppOpener.open(app,match_closest=True)
                    re(f'–û—Ç–∫—Ä—ã–≤–∞—é {app}')
                except:
                    re(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å {app}')
            else:
                re('–ö–∞–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—å?')

        elif '–∑–∞–∫—Ä–æ–π' in text:
            app = text.replace("–∑–∞–∫—Ä–æ–π", "").strip()
            if app:
                try:
                    AppOpener.close(app,match_closest=True)
                    re(f'–ó–∞–∫—Ä—ã–≤–∞—é {app}')
                except:
                    re(f'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å {app}')
            else:
                re('–ö–∞–∫–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç—å?')

        elif '–≤—ã–∫–ª—é—á–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä' in text:
            re('–í—ã–∫–ª—é—á–∞—é –∫–æ–º–ø—å—é—Ç–µ—Ä —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥')
            os.system("shutdown /s /t 10")

        else:
            ans = gig.ask_gigachat(text)
            for i in '*%¬ª`#$"':
                ans = ans.replace(i, '')
            re(ans)

    except Exception as e:
        re('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã')
        print(f"–û—à–∏–±–∫–∞: {e}")

def draw_interface():
    """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    screen.fill(LIGHT_BLUE)
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title = font_large.render("–ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ö–µ—à–∞", True, DARK_BLUE)
    screen.blit(title, (WIDTH//2 - title.get_width()//2, 15))
    
    # –°—Ç–∞—Ç—É—Å–Ω–∞—è –ø–∞–Ω–µ–ª—å
    pygame.draw.rect(screen, WHITE, (10, 60, WIDTH-20, 40), border_radius=10)
    status_text = font_medium.render(f"–°—Ç–∞—Ç—É—Å: {ui_state.status}", True, ui_state.status_color)
    screen.blit(status_text, (20, 70))
    
    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —Å–∫–∞–∑–∞–ª–∏ "–ö–µ—à–∞")
    if ui_state.is_wake_word_detected:
        pygame.draw.circle(screen, GREEN, (WIDTH - 30, 80), 8)
        active_text = font_small.render("–ê–∫—Ç–∏–≤–µ–Ω!", True, GREEN)
        screen.blit(active_text, (WIDTH - 80, 72))
    
    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–ª—É—à–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏)
    if ui_state.is_listening and ui_state.is_wake_word_detected:
        # –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        size = 8 + int(ui_state.animation_counter % 3)
        pygame.draw.circle(screen, RED, (WIDTH - 80, 80), size)
        listen_text = font_small.render("–°–ª—É—à–∞—é...", True, RED)
        screen.blit(listen_text, (WIDTH - 130, 72))
    
    # –ü–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞
    if ui_state.last_command:
        pygame.draw.rect(screen, WHITE, (10, 110, WIDTH-20, 30), border_radius=10)
        cmd_text = font_small.render(f"–ü–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞: {ui_state.last_command}", True, BLACK)
        screen.blit(cmd_text, (20, 115))
    
    # –û–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π
    pygame.draw.rect(screen, WHITE, (10, 150, WIDTH-20, 150), border_radius=10)
    msg_title = font_medium.render("–î–∏–∞–ª–æ–≥:", True, DARK_BLUE)
    screen.blit(msg_title, (20, 155))
    
    y_pos = 185
    for sender, message in ui_state.messages[-4:]:
        if sender == "–í—ã":
            color = BLUE
            prefix = "üë§ "
        else:
            color = GREEN
            prefix = "ü§ñ "
        
        msg_text = font_small.render(f"{prefix}{message}", True, color)
        screen.blit(msg_text, (25, y_pos))
        y_pos += 25
    
    # –û–±–ª–∞—Å—Ç—å –∫–æ–º–∞–Ω–¥
    pygame.draw.rect(screen, WHITE, (10, 310, WIDTH-20, 300), border_radius=10)
    commands_title = font_medium.render("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:", True, DARK_BLUE)
    screen.blit(commands_title, (20, 320))
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ
    start_idx = ui_state.commands_page * 8
    end_idx = min(start_idx + 8, len(all_commands))
    
    y_pos = 355
    for i in range(start_idx, end_idx):
        command = all_commands[i]
        if command in COMMAND_CATEGORIES:
            # –≠—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            cat_text = font_medium.render(command, True, DARK_BLUE)
            screen.blit(cat_text, (25, y_pos))
            y_pos += 25
        else:
            # –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞
            cmd_text = font_tiny.render(f"‚Ä¢ {command}", True, BLACK)
            screen.blit(cmd_text, (35, y_pos))
            y_pos += 20
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º –∫–æ–º–∞–Ω–¥
    if ui_state.total_command_pages > 1:
        page_text = font_small.render(f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {ui_state.commands_page + 1}/{ui_state.total_command_pages}", True, BLACK)
        screen.blit(page_text, (WIDTH - 160, 320))
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)
        if ui_state.commands_page > 0:
            pygame.draw.rect(screen, BLUE, (WIDTH - 200, 315, 30, 25), border_radius=5)
            prev_text = font_small.render("‚Üê", True, WHITE)
            screen.blit(prev_text, (WIDTH - 190, 315))
        
        if ui_state.commands_page < ui_state.total_command_pages - 1:
            pygame.draw.rect(screen, BLUE, (WIDTH - 50, 315, 30, 25), border_radius=5)
            next_text = font_small.render("‚Üí", True, WHITE)
            screen.blit(next_text, (WIDTH - 40, 315))
    
    # –ü–æ–¥—Å–∫–∞–∑–∫–∏ –≤–Ω–∏–∑—É
    pygame.draw.rect(screen, WHITE, (10, 620, WIDTH-20, 70), border_radius=10)
    tips = [
        "üó£Ô∏è –°–∫–∞–∂–∏—Ç–µ: '–ö–µ—à–∞' –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏, –∑–∞—Ç–µ–º –∫–æ–º–∞–Ω–¥—É",
        "‚ö° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    ]
    
    y_pos = 630
    for tip in tips:
        tip_text = font_small.render(tip, True, BLACK)
        screen.blit(tip_text, (20, y_pos))
        y_pos += 20
    
    # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
    pygame.draw.rect(screen, RED, (WIDTH - 120, 635, 100, 30), border_radius=5)
    exit_text = font_small.render("–í—ã—Ö–æ–¥", True, WHITE)
    screen.blit(exit_text, (WIDTH - 95, 640))
    
    # –ö–Ω–æ–ø–∫–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–∞–Ω–¥
    pygame.draw.rect(screen, BLUE, (WIDTH - 240, 635, 100, 30), border_radius=5)
    next_text = font_small.render("–°–ª–µ–¥. —Å—Ç—Ä", True, WHITE)
    screen.blit(next_text, (WIDTH - 235, 640))
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    pygame.draw.rect(screen, BLUE, (WIDTH - 360, 635, 100, 30), border_radius=5)
    prev_text = font_small.render("–ü—Ä–µ–¥. —Å—Ç—Ä", True, WHITE)
    screen.blit(prev_text, (WIDTH - 355, 640))
    
    pygame.display.flip()
    ui_state.animation_counter += 0.5

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ö–µ—à–∞ —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
    
    # –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–æ–≤
    threading.Thread(target=listen_for_wake_word, daemon=True).start()
    threading.Thread(target=process_commands, daemon=True).start()
    
    # –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    running = True
    clock = pygame.time.Clock()
    
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.MOUSEBUTTONDOWN:
                x, y = event.pos
                
                # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
                if WIDTH - 120 <= x <= WIDTH - 20 and 635 <= y <= 665:
                    re("–í—ã–∫–ª—é—á–∞—é—Å—å")
                    running = False
                
                # –ö–Ω–æ–ø–∫–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–∞–Ω–¥ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)
                elif WIDTH - 240 <= x <= WIDTH - 140 and 635 <= y <= 665:
                    if ui_state.commands_page < ui_state.total_command_pages - 1:
                        ui_state.commands_page += 1
                
                # –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–∞–Ω–¥ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)
                elif WIDTH - 360 <= x <= WIDTH - 260 and 635 <= y <= 665:
                    if ui_state.commands_page > 0:
                        ui_state.commands_page -= 1
                
                # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –∫–æ–º–∞–Ω–¥ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)
                elif WIDTH - 200 <= x <= WIDTH - 170 and 315 <= y <= 340:
                    if ui_state.commands_page > 0:
                        ui_state.commands_page -= 1
                
                elif WIDTH - 50 <= x <= WIDTH - 20 and 315 <= y <= 340:
                    if ui_state.commands_page < ui_state.total_command_pages - 1:
                        ui_state.commands_page += 1
        
        draw_interface()
        clock.tick(30)
    
    pygame.quit()
    os._exit(0)

if __name__ == "__main__":
    main()
