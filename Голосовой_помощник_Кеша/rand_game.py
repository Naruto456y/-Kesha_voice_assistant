import random
import time

class NumberGuessingGame:
    def __init__(self):
        self.score = 0
        self.games_played = 0
        
    def display_welcome(self):
        print("=" * 50)
        print("üéÆ –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ò–ì–†–£ '–£–ì–ê–î–ê–ô –ß–ò–°–õ–û' üéÆ")
        print("=" * 50)
        print("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:")
        print("‚Ä¢ –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ")
        print("‚Ä¢ –í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –µ–≥–æ —É–≥–∞–¥–∞—Ç—å")
        print("‚Ä¢ –ó–∞ –∫–∞–∂–¥—É—é –ø–æ–ø—ã—Ç–∫—É —Å–Ω–∏–º–∞—é—Ç—Å—è –æ—á–∫–∏")
        print("‚Ä¢ –ß–µ–º –±—ã—Å—Ç—Ä–µ–µ —É–≥–∞–¥–∞–µ—Ç–µ, —Ç–µ–º –±–æ–ª—å—à–µ –æ—á–∫–æ–≤!")
        print("=" * 50)
    
    def choose_difficulty(self):
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:")
        print("1. –õ–µ–≥–∫–∏–π (1-50, 10 –ø–æ–ø—ã—Ç–æ–∫)")
        print("2. –°—Ä–µ–¥–Ω–∏–π (1-100, 8 –ø–æ–ø—ã—Ç–æ–∫)")
        print("3. –°–ª–æ–∂–Ω—ã–π (1-200, 6 –ø–æ–ø—ã—Ç–æ–∫)")
        print("4. –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π (1-500, 5 –ø–æ–ø—ã—Ç–æ–∫)")
        
        while True:
            try:
                choice = int(input("\n–í–∞—à –≤—ã–±–æ—Ä (1-4): "))
                if choice == 1:
                    return 50, 10, 100
                elif choice == 2:
                    return 100, 8, 150
                elif choice == 3:
                    return 200, 6, 200
                elif choice == 4:
                    return 500, 5, 300
                else:
                    print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4!")
            except ValueError:
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ!")
    
    def play_round(self):
        max_num, max_attempts, base_score = self.choose_difficulty()
        secret_number = random.randint(1, max_num)
        attempts = 0
        
        print(f"\nüéØ –Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {max_num}")
        print(f"–£ –≤–∞—Å –µ—Å—Ç—å {max_attempts} –ø–æ–ø—ã—Ç–æ–∫!")
        print(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª –∑–∞ —ç—Ç—É –∏–≥—Ä—É: {base_score}")
        
        start_time = time.time()
        
        while attempts < max_attempts:
            try:
                attempts += 1
                guess = int(input(f"\n–ü–æ–ø—ã—Ç–∫–∞ {attempts}/{max_attempts}. –í–∞—à–µ —á–∏—Å–ª–æ: "))
                
                if guess == secret_number:
                    end_time = time.time()
                    time_taken = round(end_time - start_time, 1)
                    
                    # –ü–æ–¥—Å—á–µ—Ç –æ—á–∫–æ–≤
                    remaining_attempts = max_attempts - attempts + 1
                    time_bonus = max(0, 30 - int(time_taken))
                    round_score = base_score + (remaining_attempts * 10) + time_bonus
                    
                    print(f"\nüéâ –ü–û–ó–î–†–ê–í–õ–Ø–Æ! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ {secret_number}!")
                    print(f"‚è±Ô∏è  –í—Ä–µ–º—è: {time_taken} —Å–µ–∫—É–Ω–¥")
                    print(f"üéØ –ü–æ–ø—ã—Ç–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {attempts}")
                    print(f"‚≠ê –û—á–∫–∏ –∑–∞ —Ä–∞—É–Ω–¥: {round_score}")
                    
                    self.score += round_score
                    self.games_played += 1
                    return True
                    
                elif guess < secret_number:
                    remaining = max_attempts - attempts
                    if remaining > 0:
                        print(f"üìà –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ë–û–õ–¨–®–ï! –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {remaining}")
                    
                elif guess > secret_number:
                    remaining = max_attempts - attempts
                    if remaining > 0:
                        print(f"üìâ –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ú–ï–ù–¨–®–ï! –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: {remaining}")
                        
            except ValueError:
                print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ!")
                attempts -= 1  # –ù–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥
        
        print(f"\nüíî –ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ: {secret_number}")
        self.games_played += 1
        return False
    
    def show_statistics(self):
        if self.games_played > 0:
            win_rate = (self.score > 0) * 100 // self.games_played if self.games_played > 0 else 0
            print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            print(f"üéÆ –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {self.games_played}")
            print(f"‚≠ê –û–±—â–∏–π —Å—á–µ—Ç: {self.score}")
            print(f"üìà –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: {self.score // self.games_played if self.games_played > 0 else 0}")
        else:
            print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É—Å—Ç–∞. –°—ã–≥—Ä–∞–π—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∏–≥—Ä—É!")
    
    def main_menu(self):
        self.display_welcome()
        
        while True:
            print(f"\nüèÜ –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç: {self.score}")
            print("\n--- –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ---")
            print("1. üéÆ –ò–≥—Ä–∞—Ç—å")
            print("2. üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
            print("3. üèÜ –†–µ–∫–æ—Ä–¥—ã")
            print("4. ‚ùå –í—ã—Ö–æ–¥")
            
            try:
                choice = int(input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): "))
                
                if choice == 1:
                    print("\n" + "="*30)
                    result = self.play_round()
                    if result:
                        print("üéä –û—Ç–ª–∏—á–Ω–∞—è –∏–≥—Ä–∞!")
                    else:
                        print("üòî –ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
                    print("="*30)
                    
                elif choice == 2:
                    self.show_statistics()
                    
                elif choice == 3:
                    self.show_records()
                    
                elif choice == 4:
                    print("\nüëã –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    if self.games_played > 0:
                        print(f"üèÜ –í–∞—à —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—á–µ—Ç: {self.score}")
                    break
                    
                else:
                    print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4!")
                    
            except ValueError:
                print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ!")
    
    def show_records(self):
        records = [
            ("ü•â –ù–æ–≤–∏—á–æ–∫", 100),
            ("ü•à –õ—é–±–∏—Ç–µ–ª—å", 500),
            ("ü•á –≠–∫—Å–ø–µ—Ä—Ç", 1000),
            ("üèÜ –ú–∞—Å—Ç–µ—Ä", 2000),
            ("üëë –õ–µ–≥–µ–Ω–¥–∞", 5000)
        ]
        
        print("\nüèÜ –¢–ê–ë–õ–ò–¶–ê –†–ï–ö–û–†–î–û–í:")
        print("-" * 30)
        
        current_rank = "üî∞ –ù–∞—á–∏–Ω–∞—é—â–∏–π"
        for rank, required_score in records:
            status = "‚úÖ" if self.score >= required_score else "‚ùå"
            print(f"{status} {rank}: {required_score} –æ—á–∫–æ–≤")
            if self.score >= required_score:
                current_rank = rank
        
        print(f"\nüéñÔ∏è  –í–∞—à —Ç–µ–∫—É—â–∏–π —Ä–∞–Ω–≥: {current_rank}")
        print(f"‚≠ê –í–∞—à —Å—á–µ—Ç: {self.score}")

# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
if __name__ == "__main__":
    game = NumberGuessingGame()
    game.main_menu()
